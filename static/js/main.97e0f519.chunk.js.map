{"version":3,"sources":["SearchBar.js","WeatherResults.js","FilterableWeatherSearch.js","helpers/StringFormatting.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleSubmit","event","onSearchQueryChange","_this2","fetch","process","searchQuery","city","country","then","response","json","data","code","weather","id","icon","weatherIcons","location","name","sys","onSubmit","main","temp","catch","error","alert","preventDefault","react_default","a","createElement","className","type","placeholder","value","onChange","Component","WeatherResults","class","temperature","weatherDescription","FilterableWeatherSearch","state","objectSpread","target","setState","descr","string","Math","floor","console","log","charAt","toUpperCase","slice","src_SearchBar","src_WeatherResults","ReactDOM","render","src_FilterableWeatherSearch","document","getElementById"],"mappings":"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","file":"static/js/main.97e0f519.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport weatherIcons from './weatherIcons.json';\r\nimport './css/weather-icons.min.css';\r\nimport './css/SearchBar.css'\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.props.onSearchQueryChange(event)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        fetch(\r\n            process.env.REACT_APP_API_URL+'?q='+this.props.searchQuery.city+','+this.props.searchQuery.country+'&APPID='+process.env.REACT_APP_API_KEY+'&units=imperial')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                //Code taken from usage demo from https://gist.github.com/tbranyen/62d974681dea8ee0caa1\r\n                var prefix = 'wi wi-';\r\n                var code = data.weather[0].id;\r\n                var icon = weatherIcons[code].icon;\r\n                \r\n                // If we are not in the ranges mentioned above, add a day/night prefix.\r\n                if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\r\n                    icon = 'day-' + icon;\r\n                }\r\n                \r\n                // Finally tack on the prefix.\r\n                icon = prefix + icon;\r\n                const location = data.name + ', ' + data.sys.country;\r\n                this.props.onSubmit(data.main.temp, data.weather[0].main, location, icon);\r\n            })\r\n            .catch(function(error) {\r\n                alert(\"Sorry we couldn't find any weather data matching your query\")\r\n            })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <form className=\"Search-Bar-Form\" onSubmit={this.handleSubmit}>\r\n            <div className=\"Search-Bar-Inputs-Container\">\r\n              <input className=\"Search-Bar-Input\" name=\"city\" type=\"text\" \r\n                    placeholder=\"City...\" value={this.props.searchQuery.city} onChange={this.handleInputChange}/>\r\n              <br></br>\r\n              <input className=\"Search-Bar-Input\" name=\"country\" type=\"text\" \r\n                    placeholder=\"Country...\" value={this.props.searchQuery.country} onChange={this.handleInputChange}/>\r\n              <vr></vr>\r\n              <br></br>\r\n              <input className=\"Search-Bar-Input-Submit\" type=\"submit\" value=\"Submit\"/>\r\n            </div>\r\n          </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport './css/WeatherResults.css';\r\n\r\nclass WeatherResults extends Component {\r\n    render() {\r\n      return (\r\n          <div className='Weather-Results-weather-container'>\r\n            <div className='Weather-Results-weather-h1'>\r\n              <h1><i class={this.props.icon}></i></h1>\r\n              {this.props.temperature != '' ? <h1>{this.props.temperature}&#176; </h1>: null}\r\n              <h2>{this.props.weatherDescription}</h2>\r\n              <br></br>\r\n              {this.props.temperature != '' ? <h3>{this.props.location}</h3>: null}\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default WeatherResults;","import React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport WeatherResults from './WeatherResults';\r\nimport { capitalizeFirstLetter } from './helpers/StringFormatting';\r\n\r\n\r\nclass FilterableWeatherSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          searchQuery: {city: '', country: ''},\r\n          temperature: '',\r\n          weatherDescription: '',\r\n          location: '',\r\n          icon: ''\r\n        };\r\n\r\n        this.onSearchQueryChange = this.onSearchQueryChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSearchQueryChange(event) {\r\n        const searchQuery = {...this.state.searchQuery};\r\n        searchQuery[event.target.name] = event.target.value;\r\n        this.setState({\r\n            searchQuery\r\n        });\r\n    }\r\n\r\n    onSubmit(temp, descr, location, icon) {\r\n        this.setState({\r\n            temperature: Math.floor(temp),\r\n            weatherDescription: capitalizeFirstLetter(descr),\r\n            location: location,\r\n            icon: icon\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <SearchBar searchQuery={this.state.searchQuery} onSearchQueryChange={this.onSearchQueryChange} onSubmit={this.onSubmit}/>\r\n            <WeatherResults temperature={this.state.temperature} weatherDescription={this.state.weatherDescription} \r\n                location={this.state.location} icon={this.state.icon}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterableWeatherSearch;","export function capitalizeFirstLetter(string) {\r\n    console.log(string);\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport FilterableWeatherSearch from './FilterableWeatherSearch';\n\nReactDOM.render(<FilterableWeatherSearch />, document.getElementById('root'));\n\n"],"sourceRoot":""}